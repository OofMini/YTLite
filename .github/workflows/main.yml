name: Create YouTube Plus app

on:
  workflow_dispatch:
    inputs:

      core_tweaks:
        description: "Core Tweaks (comma-separated: YouPiP, YTUHD, YouQuality, ReturnYouTubeDislikes, DontEatMyContent)"
        type: string
        required: false
        default: ""

      extra_tweaks:
        description: "++ Additional Tweaks (comma-separated: YTABConfig, YouMute, YTNoTracking, YouRememberCaption, NoYtPremium, YouTimeStamp)"
        type: string
        required: false
        default: ""

      ipa_url:
        description: "URL to the decrypted IPA file"
        default: ""
        required: true
        type: string

      tweak_version:
        description: "The version of the tweak to use. Enter the version manually from dayanch96/YTLite/releases or leave default"
        default: "5.2b3"
        required: true
        type: string

      display_name:
        description: "App Name (Optional)"
        default: "YouTube"
        required: true
        type: string

      bundle_id:
        description: "BundleID (Optional)"
        default: "com.google.ios.youtube"
        required: true
        type: string

      info_note:
        description: "TIP: Learn more about integrations in the README via the link below"
        default: "https://github.com/dayanch96/YTLite#tweak-integration-details"
        type: string
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build YouTube Plus
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Main
        uses: actions/checkout@v4.1.1
        with:
          path: main
          submodules: recursive

      - name: Hide sensitive inputs
        uses: levibostian/action-hide-sensitive-inputs@v1
        with:
          exclude_inputs: bundle_id,display_name,core_tweaks,extra_tweaks,info_note,tweak_version

      - name: Download and validate IPA
        run: |
          wget "${{ github.event.inputs.ipa_url }}" --no-verbose -O ${{ github.workspace }}/youtube.ipa

          file_type=$(file --mime-type -b ${{ github.workspace }}/youtube.ipa)

          if [[ "$file_type" != "application/x-ios-app" && "$file_type" != "application/zip" ]]; then
            echo "::error::Validation failed: The downloaded file is not a valid IPA. Detected type: $file_type."
            exit 1
          fi

      - name: Install Dependencies
        run: brew install make ldid

      - name: Set PATH environment variable
        run: echo "$(brew --prefix make)/libexec/gnubin" >> $GITHUB_PATH

      - name: Parse core tweaks
        id: parse_core
        run: |
          CORES="${{ github.event.inputs.core_tweaks }}"
          echo "enable_youpip=$(echo "$CORES" | grep -qi "youpip" && echo "true" || echo "false")" >> $GITHUB_OUTPUT
          echo "enable_ytuhd=$(echo "$CORES" | grep -qi "ytuhd" && echo "true" || echo "false")" >> $GITHUB_OUTPUT
          echo "enable_yq=$(echo "$CORES" | grep -qi "youquality" && echo "true" || echo "false")" >> $GITHUB_OUTPUT
          echo "enable_ryd=$(echo "$CORES" | grep -qi "returnyoutubedislikes" && echo "true" || echo "false")" >> $GITHUB_OUTPUT
          echo "enable_demc=$(echo "$CORES" | grep -qi "donteatmycontent" && echo "true" || echo "false")" >> $GITHUB_OUTPUT

      - name: Parse extra tweaks
        id: parse_extra
        run: |
          EXTRAS="${{ github.event.inputs.extra_tweaks }}"
          echo "enable_ytabconfig=$(echo "$EXTRAS" | grep -qi "ytabconfig" && echo "true" || echo "false")" >> $GITHUB_OUTPUT
          echo "enable_youmute=$(echo "$EXTRAS" | grep -qi "youmute" && echo "true" || echo "false")" >> $GITHUB_OUTPUT
          echo "enable_ytnotracking=$(echo "$EXTRAS" | grep -qi "ytnotracking" && echo "true" || echo "false")" >> $GITHUB_OUTPUT
          echo "enable_youremembercaption=$(echo "$EXTRAS" | grep -qi "youremembercaption" && echo "true" || echo "false")" >> $GITHUB_OUTPUT
          echo "enable_noytpremium=$(echo "$EXTRAS" | grep -qi "noytpremium" && echo "true" || echo "false")" >> $GITHUB_OUTPUT
          echo "enable_youtimestamp=$(echo "$EXTRAS" | grep -qi "youtimestamp" && echo "true" || echo "false")" >> $GITHUB_OUTPUT

      - name: Cache Theos
        if: ${{ steps.parse_core.outputs.enable_youpip == 'true' || steps.parse_core.outputs.enable_ytuhd == 'true' || steps.parse_core.outputs.enable_yq == 'true' || steps.parse_core.outputs.enable_ryd == 'true' || steps.parse_core.outputs.enable_demc == 'true' || steps.parse_extra.outputs.enable_ytabconfig == 'true' || steps.parse_extra.outputs.enable_youmute == 'true' || steps.parse_extra.outputs.enable_ytnotracking == 'true' || steps.parse_extra.outputs.enable_youremembercaption == 'true' || steps.parse_extra.outputs.enable_noytpremium == 'true' || steps.parse_extra.outputs.enable_youtimestamp == 'true' }}
        id: theos
        uses: actions/cache@v4
        env:
          cache-name: theos_cache_67db2ab
        with:
          path: theos/
          key: ${{ env.cache-name }}
          restore-keys: ${{ env.cache-name }}

      - name: Setup Theos
        if: ${{ (steps.parse_core.outputs.enable_youpip == 'true' || steps.parse_core.outputs.enable_ytuhd == 'true' || steps.parse_core.outputs.enable_yq == 'true' || steps.parse_core.outputs.enable_ryd == 'true' || steps.parse_core.outputs.enable_demc == 'true' || steps.parse_extra.outputs.enable_ytabconfig == 'true' || steps.parse_extra.outputs.enable_youmute == 'true' || steps.parse_extra.outputs.enable_ytnotracking == 'true' || steps.parse_extra.outputs.enable_youremembercaption == 'true' || steps.parse_extra.outputs.enable_noytpremium == 'true' || steps.parse_extra.outputs.enable_youtimestamp == 'true') && steps.theos.outputs.cache-hit != 'true' }}
        uses: actions/checkout@v4.1.7
        with:
          repository: theos/theos
          ref: 67db2ab8d950910161730de77c322658ea3e6b44
          path: ${{ github.workspace }}/theos
          submodules: recursive

      - name: Download iOS SDK
        if: ${{ (steps.parse_core.outputs.enable_youpip == 'true' || steps.parse_core.outputs.enable_ytuhd == 'true' || steps.parse_core.outputs.enable_yq == 'true' || steps.parse_core.outputs.enable_ryd == 'true' || steps.parse_core.outputs.enable_demc == 'true' || steps.parse_extra.outputs.enable_ytabconfig == 'true' || steps.parse_extra.outputs.enable_youmute == 'true' || steps.parse_extra.outputs.enable_ytnotracking == 'true' || steps.parse_extra.outputs.enable_youremembercaption == 'true' || steps.parse_extra.outputs.enable_noytpremium == 'true' || steps.parse_extra.outputs.enable_youtimestamp == 'true') && steps.theos.outputs.cache-hit != 'true' }}
        run: |
          git clone --quiet -n --depth=1 --filter=tree:0 https://github.com/theos/sdks/
          cd sdks
          git sparse-checkout set --no-cone iPhoneOS16.5.sdk
          git checkout
          mv *.sdk $THEOS/sdks
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Install cyan
        run: pipx install --force https://github.com/asdfzxcvbn/pyzule-rw/archive/main.zip

      - name: Download YouTube Plus
        id: download_ytp
        run: |
          deb_url="https://github.com/dayanch96/YTLite/releases/download/v${{ github.event.inputs.tweak_version }}/com.dvntm.ytlite_${{ github.event.inputs.tweak_version }}_iphoneos-arm.deb"
          wget "$deb_url" --no-verbose -O ${{ github.workspace }}/ytplus.deb

      - name: Clone Open in YouTube (Safari extension)
        run: |
          git clone --quiet -n --depth=1 --filter=tree:0 https://github.com/CokePokes/YoutubeExtensions/
          cd YoutubeExtensions
          git sparse-checkout set --no-cone OpenYoutubeSafariExtension.appex
          git checkout
          mv *.appex ${{ github.workspace }}

      - name: Clone YouTubeHeader
        if: ${{ steps.parse_core.outputs.enable_youpip == 'true' || steps.parse_core.outputs.enable_ytuhd == 'true' || steps.parse_core.outputs.enable_yq == 'true' || steps.parse_core.outputs.enable_ryd == 'true' || steps.parse_core.outputs.enable_demc == 'true' || steps.parse_extra.outputs.enable_ytabconfig == 'true' || steps.parse_extra.outputs.enable_youmute == 'true' || steps.parse_extra.outputs.enable_ytnotracking == 'true' || steps.parse_extra.outputs.enable_youremembercaption == 'true' || steps.parse_extra.outputs.enable_noytpremium == 'true' || steps.parse_extra.outputs.enable_youtimestamp == 'true' }}
        run: |
          if [ -d "$THEOS/include/YouTubeHeader" ]; then
            echo "YouTubeHeader exists. Pulling latest changes..."
            cd $THEOS/include/YouTubeHeader
            git pull
          else
            echo "YouTubeHeader does not exist. Cloning repository..."
            cd $THEOS/include
            git clone --quiet --depth=1 https://github.com/PoomSmart/YouTubeHeader.git
          fi

          if [ "${{ steps.parse_core.outputs.enable_demc }}" = "true" ]; then
            echo "Copying YouTubeHeader to YTHeaders..."
            rm -rf "$THEOS/include/YTHeaders"
            cp -r "$THEOS/include/YouTubeHeader" "$THEOS/include/YTHeaders"
          fi
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Clone PSHeader
        if: ${{ steps.parse_core.outputs.enable_youpip == 'true' || steps.parse_core.outputs.enable_ytuhd == 'true' || steps.parse_core.outputs.enable_yq == 'true' || steps.parse_core.outputs.enable_ryd == 'true' || steps.parse_core.outputs.enable_demc == 'true' || steps.parse_extra.outputs.enable_ytabconfig == 'true' || steps.parse_extra.outputs.enable_youmute == 'true' || steps.parse_extra.outputs.enable_ytnotracking == 'true' || steps.parse_extra.outputs.enable_youremembercaption == 'true' || steps.parse_extra.outputs.enable_noytpremium == 'true' || steps.parse_extra.outputs.enable_youtimestamp == 'true' }}
        run: |
          if [ -d "$THEOS/include/PSHeader" ]; then
            echo "PSHeader exists. Pulling latest changes..."
            cd $THEOS/include/PSHeader
            git pull
          else
            echo "PSHeader does not exist. Cloning repository..."
            cd $THEOS/include
            git clone --quiet --depth=1 https://github.com/PoomSmart/PSHeader.git
          fi
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Clone YouPiP
        if: ${{ steps.parse_core.outputs.enable_youpip == 'true' }}
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/PoomSmart/YouPiP.git

      - name: Clone YTUHD
        if: ${{ steps.parse_core.outputs.enable_ytuhd == 'true' }}
        uses: actions/checkout@v4.1.7
        with:
          repository: PoomSmart/YTUHD
          ref: 0f59b38817d554ab692a0053456319847a6ab1a1
          path: ${{ github.workspace }}/YTUHD

      - name: Clone Return-YouTube-Dislikes
        if: ${{ steps.parse_core.outputs.enable_ryd == 'true' }}
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/PoomSmart/Return-YouTube-Dislikes.git

      - name: Clone YouGroupSettings
        if: ${{ steps.parse_core.outputs.enable_demc == 'true' }}
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/PoomSmart/YouGroupSettings.git

      - name: Clone YouQuality
        if: ${{ steps.parse_core.outputs.enable_yq == 'true' }}
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/PoomSmart/YouQuality.git

      - name: Clone YTVideoOverlay
        if: ${{ steps.parse_core.outputs.enable_yq == 'true' || steps.parse_core.outputs.enable_youpip == 'true' }}
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/PoomSmart/YTVideoOverlay.git

      - name: Clone DontEatMyContent
        if: ${{ steps.parse_core.outputs.enable_demc == 'true' }}
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 --recurse-submodules https://github.com/therealFoxster/DontEatMyContent.git

      - name: Clone YTABConfig
        if: ${{ steps.parse_extra.outputs.enable_ytabconfig == 'true' }}
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/PoomSmart/YTABConfig.git

      - name: Clone YouMute
        if: ${{ steps.parse_extra.outputs.enable_youmute == 'true' }}
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/PoomSmart/YouMute.git

      - name: Clone YTNoTracking
        if: ${{ steps.parse_extra.outputs.enable_ytnotracking == 'true' }}
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/PoomSmart/YTNoTracking.git

      - name: Clone YouRememberCaption
        if: ${{ steps.parse_extra.outputs.enable_youremembercaption == 'true' }}
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/PoomSmart/YouRememberCaption.git

      - name: Clone NoYtPremium
        if: ${{ steps.parse_extra.outputs.enable_noytpremium == 'true' }}
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/PoomSmart/NoYtPremium.git

      - name: Clone YouTimeStamp
        if: ${{ steps.parse_extra.outputs.enable_youtimestamp == 'true' }}
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/PoomSmart/YouTimeStamp.git

      - name: Build YouPiP
        if: ${{ steps.parse_core.outputs.enable_youpip == 'true' }}
        run: |
          cd ${{ github.workspace }}/YouPiP
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youpip.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YTUHD
        if: ${{ steps.parse_core.outputs.enable_ytuhd == 'true' }}
        run: |
          cd ${{ github.workspace }}/YTUHD
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ytuhd.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build Return-YouTube-Dislikes
        if: ${{ steps.parse_core.outputs.enable_ryd == 'true' }}
        run: |
          cd ${{ github.workspace }}/Return-YouTube-Dislikes
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ryd.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouGroupSettings
        if: ${{ steps.parse_core.outputs.enable_demc == 'true' }}
        run: |
          cd ${{ github.workspace }}/YouGroupSettings
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ygs.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouQuality
        if: ${{ steps.parse_core.outputs.enable_yq == 'true' }}
        run: |
          cd ${{ github.workspace }}/YouQuality
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/yq.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YTVideoOverlay
        if: ${{ steps.parse_core.outputs.enable_yq == 'true' || steps.parse_core.outputs.enable_youpip == 'true' }}
        run: |
          cd ${{ github.workspace }}/YTVideoOverlay
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ytvo.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build DontEatMyContent
        if: ${{ steps.parse_core.outputs.enable_demc == 'true' }}
        run: |
          cd ${{ github.workspace }}/DontEatMyContent
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/demc.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YTABConfig
        if: ${{ steps.parse_extra.outputs.enable_ytabconfig == 'true' }}
        run: |
          cd ${{ github.workspace }}/YTABConfig
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ytabconfig.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouMute
        if: ${{ steps.parse_extra.outputs.enable_youmute == 'true' }}
        run: |
          cd ${{ github.workspace }}/YouMute
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youmute.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YTNoTracking
        if: ${{ steps.parse_extra.outputs.enable_ytnotracking == 'true' }}
        run: |
          cd ${{ github.workspace }}/YTNoTracking
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ytnotracking.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouRememberCaption
        if: ${{ steps.parse_extra.outputs.enable_youremembercaption == 'true' }}
        run: |
          cd ${{ github.workspace }}/YouRememberCaption
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youremembercaption.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build NoYtPremium
        if: ${{ steps.parse_extra.outputs.enable_noytpremium == 'true' }}
        run: |
          cd ${{ github.workspace }}/NoYtPremium
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/noytpremium.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouTimeStamp
        if: ${{ steps.parse_extra.outputs.enable_youtimestamp == 'true' }}
        run: |
          cd ${{ github.workspace }}/YouTimeStamp
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youtimestamp.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Inject tweaks into IPA
        run: |
          tweaks="ytplus.deb OpenYoutubeSafariExtension.appex"

          for f in *.deb; do
            if [ -f "$f" ]; then
              tweaks="$tweaks $f"
            fi
          done

          cyan -i youtube.ipa -o YouTubePlus_${{ github.event.inputs.tweak_version }}.ipa -uwef $tweaks -n "${{ github.event.inputs.display_name }}" -b ${{ github.event.inputs.bundle_id }}

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v2.0.1
        with:
          tag_name: ytp-${{ github.run_number }}
          name: YouTubePlus v${{ github.event.inputs.tweak_version }} (${{ github.run_number }})
          files: YouTubePlus_${{ github.event.inputs.tweak_version }}.ipa
          draft: true

      - name: Output Release URL
        run: |
          echo "::notice::Release available at: https://github.com/${{ github.repository }}/releases"